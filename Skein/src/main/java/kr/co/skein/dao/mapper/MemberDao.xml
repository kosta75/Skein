<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.skein.dao.MemberDao">

	<!-- 사용자 목록(기본정보) 조회 -->
	<select id="getMembers" resultType="kr.co.skein.model.Member">
		SELECT * FROM Members
		<where>
			<if test="searchKey != null">
				<choose>
					<when test="searchKey == customURI">
						personalURI LIKE '%${searchValue}%' 
					</when>
					<otherwise>
						${searchKey} = #{searchValue}
					</otherwise>
				</choose>
			</if>
			
		</where>
	</select>
	
	<!-- 사용자 등록(기본정보) -->
	<insert id="registerMember" parameterType="kr.co.skein.model.Member">
		INSERT INTO Members(Email, LastName, FirstName, FullName, Password, Birthday, PersonalURI, IsApproved, IsLockedOut, IsDomranted, IsDropedOut, CreateDate, CertificationText)
		VALUES(#{email}, #{lastName}, #{firstName}, #{fullName}, #{password}, #{birthday}, #{personalURI}, #{isApproved}, #{isLockedOut}, #{isDomranted}, #{isDropedOut}, SYSDATE, #{certificationText})
	</insert>
	
	<!-- 사용자 정보 갱신(기본 계정정보) -->
	<update id="updateMemberAccount" parameterType="kr.co.skein.model.Member">
		UPDATE Members
		<set>
			<if test="isLockedOut != null">IsLockedOut = #{isLockedOut},</if>
			<if test="isDropedOut != null">IsDropedOut = #{isDropedOut},</if>
			<if test="isDomranted != null">IsDomranted = #{isDomranted},</if>
			<if test="isApproved != null">IsApproved = #{isApproved},</if>			
			<if test="certificationText != null">CertificationText = #{certificationText}</if>
		</set>
		WHERE email = #{email}
	</update>

	<!-- 사용자 권한 등록(기본권한) -->
	<insert id="createMemberAuthority" parameterType="kr.co.skein.model.MemberAuthority">
		INSERT INTO Authorities(Authority, Email)
		VALUES(#{authority}, #{email})
	</insert>




	
	<select id="isRegisteredMember" resultType="Integer">
		SELECT COUNT(*) FROM Members WHERE Email = #{email}
	</select>
	
	<!-- 사용자 로그인 정보 확인 - Security 사용 하지 않을 경우를 위해 작성  -->
	<select id="validMember" resultType="Integer">
		SELECT COUNT(*) FROM Members WHERE Email = #{email} AND Password = #{password} 
	</select>

	<select id="getPersonalURI" resultType="String">
		SELECT PersonalURI FROM Members WHERE Email = #{email}
	</select>
	
	<select id="getCountOfPersonalURI" resultType="Integer">
		SELECT COUNT(PersonalURI) FROM Members WHERE personalURI LIKE '%${personalURI}%'
	</select>
	
	<select id="getMemberProfile" resultType="kr.co.skein.model.MemberProfile">
		SELECT m.Email, m.LastName, m.FirstName, m.FullName, m.Password, m.Birthday, m.CreateDate, m.LastLoginDate, m.Enabled, m.Closed, m.PersonalURI, m.LastPasswordChangedDate, m.FailedPasswordAttemptCount, p.Address, p.ProfileImage, p.OpenEmail, p.PhoneNumber, p.StatusComment, p.Religion, p.Politics, P.Language, p.Blog
		FROM MEMBERS m JOIN PROFILE p ON m.email = p.email WHERE m.PersonalURI = #{personalURI}
	</select>
	
	<insert id="memberProfileReg" parameterType="kr.co.skein.model.MemberProfile">
		INSERT INTO Profile(Email, Address, ProfileImage, OpenEmail, PhoneNumber, StatusComment, Religion, Politics, Language, Blog)
		VALUES(#{email}, #{address}, #{profileImage}, #{openEmail}, #{phoneNumber}, #{statusComment}, #{religion}, #{politics}, #{language}, #{blog})
	</insert>

</mapper>