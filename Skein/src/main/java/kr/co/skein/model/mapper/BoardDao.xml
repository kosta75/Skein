<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.skein.model.dao.BoardDao">

	<!-- 1. 그룹 등록 -->
	<insert id="groupReg" parameterType="kr.co.skein.model.vo.BoardCommand">
		<selectKey order="BEFORE" keyProperty="groupSeq" resultType="String">
			SELECT NVL(MAX(TO_NUMBER(GroupSeq)),0)+1 FROM BoardGroup
		</selectKey>
		INSERT INTO BoardGroup(GroupSeq, Email, GroupName, IsImportantGroup, GroupStartDate, GroupEndDate)
		VALUES(#{groupSeq}, #{email}, #{groupName}, #{isImportantGroup}, #{groupStartDate}, #{groupEndDate})
	</insert>
	
	 <!-- 1.1. 그룹 식별번호 최대값 얻기 -->
	<select id="getGroupMaxSequence" resultType="String">
		SELECT MAX(GroupSeq) FROM BoardGroup
	</select>
	
	<!-- 2. 개인기록 게시물 등록 -->
	<insert id="historyReg" parameterType="kr.co.skein.model.vo.HistoryCommand">
		<selectKey order="BEFORE" keyProperty="boardSeq" resultType="String">
			SELECT NVL(MAX(TO_NUMBER(BoardSeq)),0)+1 FROM Board
		</selectKey>
		INSERT ALL
			INTO Board(BoardSeq, BoardKindSeq, Email, Content, WriteDate, PublicLevelCode, IsActivated, GroupSeq)
			VALUES(#{boardSeq}, #{boardKindSeq}, #{email}, #{content}, SYSDATE, #{publicLevelCode}, #{isActivated}, #{groupSeq})
			<if test="boardKindSeq ==2">
			INTO History(BoardSeq, StartDate, EndDate, Feelings, Weather, IsImportant, IsShare, Keyword, Place)
			VALUES(#{boardSeq}, #{startDate}, #{endDate}, #{feelings}, #{weather}, #{isImportant}, #{isShare}, #{keyword}, #{place})
			</if>
			<if test="media != null">
			INTO Media(BoardSeq, FileName, FileSize, Extension)
			VALUES(#{boardSeq}, #{media.fileName}, #{media.fileSize}, #{media.extension})
			</if>
		SELECT * FROM DUAL
	</insert>
	
	<!-- 5. 사용자 게시물 조회 -->
	<select id="getBoards" resultType="kr.co.skein.model.vo.MemberBoardCommand">
		SELECT m.EMAIL, m.FULLNAME, m.BIRTHDAY, m.PERSONALURI, b.BOARDSEQ, b.BOARDKINDSEQ, b.CONTENT, b.WRITEDATE, b.PUBLICLEVELCODE, b.ISACTIVATED, b.GROUPSEQ,
			h.STARTDATE, h.ENDDATE, h.FEELINGS, h.WEATHER, h.ISIMPORTANT, h.ISSHARE, h.KEYWORD, h.PLACE, bg.GROUPNAME, bg.ISIMPORTANTGROUP, bg.GROUPSTARTDATE, bg.GROUPENDDATE,
			me.FILENAME, me.FILESIZE, me.EXTENSION
			FROM MEMBERS m JOIN BOARD b ON m.EMAIL = b.email
			JOIN BOARDGROUP bg ON b.GROUPSEQ = bg.GROUPSEQ
			JOIN HISTORY h ON b.BOARDSEQ = h.BOARDSEQ
			LEFT OUTER JOIN MEDIA me ON b.BOARDSEQ = me.BOARDSEQ
		WHERE m.PERSONALURI = #{personalURI} ORDER BY b.GROUPSEQ DESC, b.BOARDSEQ DESC 
	</select>
	
	<!--6. 사용자 게시물 상세 조회  -->
	<select id="getBoardDetail" resultType="kr.co.skein.model.vo.BoardDetailView">
		select mb.fullName,b.boardSeq,b.boardkindseq,b.email,b.content,b.writedate,b.groupSeq,b.publicLevelcode,m.filename,m.boardSeq
		from board b  JOIN  media m  ON  b.boardSeq = m.boardSeq  JOIN members mb ON b.email = mb.email where  b.groupseq = #{groupSeq}
	</select>
	
	
	
	<!-- 7. 사용자 그룹 게시물 조회 -->
	<select id="getBoardGroup" resultType="kr.co.skein.model.vo.BoardGroup">
		SELECT bg.GroupSeq, bg.GroupName, bg.IsImportantGroup, bg.GroupStartDate, bg.GroupEndDate,
			b.GroupCount, b.BoardSeq, b.Email, b.BOARDKINDSEQ, b.CONTENT, b.WRITEDATE, b.PUBLICLEVELCODE, b.ISACTIVATED,
			h.STARTDATE, h.ENDDATE, h.FEELINGS, h.WEATHER, h.ISIMPORTANT, h.ISSHARE, h.KEYWORD, h.PLACE,
			me.FILENAME, me.FILESIZE, me.EXTENSION,
			m.FULLNAME, m.BIRTHDAY, m.PERSONALURI
			FROM BOARDGROUP bg JOIN
			(
				SELECT BOARDSEQ, BoardKindSeq, Email, GroupSeq, Content, WRITEDATE, PUBLICLEVELCODE, ISACTIVATED, GroupCount FROM
				(
					SELECT BOARDSEQ, BoardKindSeq, Email, GroupSeq, Content, WRITEDATE, PUBLICLEVELCODE, ISACTIVATED, ROW_NUMBER() OVER(PARTITION BY groupSeq ORDER BY BOARDSEQ DESC) AS rnum, COUNT(*) OVER(PARTITION BY groupSeq) AS groupCount
					FROM Board
					WHERE email = #{email}
				)
			WHERE rnum = 1
			) b ON bg.groupSeq = b.groupSeq
		JOIN HISTORY h ON h.BOARDSEQ = b.BOARDSEQ
		JOIN MEMBERS m ON m.Email = b.Email
		LEFT OUTER JOIN MEDIA me ON me.BOARDSEQ = b.BOARDSEQ
		ORDER BY GROUPSTARTDATE ASC
	</select>
	
	
	<!-- 7. 사용자 그룹 게시물 조회 -->
	<select id="getPartOfBoardGroup" resultType="kr.co.skein.model.vo.BoardGroup">
		SELECT * FROM
(
SELECT ROWNUM r, s.* from
(
SELECT bg.GroupSeq, bg.GroupName, bg.IsImportantGroup, bg.GroupStartDate, bg.GroupEndDate,
            b.GroupCount, b.BoardSeq, b.Email, b.BOARDKINDSEQ, b.CONTENT, b.WRITEDATE, b.PUBLICLEVELCODE, b.ISACTIVATED,
            h.STARTDATE, h.ENDDATE, h.FEELINGS, h.WEATHER, h.ISIMPORTANT, h.ISSHARE, h.KEYWORD, h.PLACE,
            me.FILENAME, me.FILESIZE, me.EXTENSION,
            m.FULLNAME, m.BIRTHDAY, m.PERSONALURI
            FROM BOARDGROUP bg JOIN
            (
            SELECT BOARDSEQ, BoardKindSeq, Email, GroupSeq, Content, WRITEDATE, PUBLICLEVELCODE, ISACTIVATED, GroupCount FROM
               (
               SELECT BOARDSEQ, BoardKindSeq, Email, GroupSeq, Content, WRITEDATE, PUBLICLEVELCODE, ISACTIVATED, ROW_NUMBER() OVER(PARTITION BY groupSeq ORDER BY BOARDSEQ DESC) AS rnum, COUNT(*) OVER(PARTITION BY groupSeq) AS groupCount
               FROM Board
               WHERE email = #{param1}
               )
            WHERE rnum = 1
            ) b ON bg.groupSeq = b.groupSeq
      JOIN HISTORY h ON h.BOARDSEQ = b.BOARDSEQ
      JOIN MEMBERS m ON m.Email = b.Email
      LEFT OUTER JOIN MEDIA me ON me.BOARDSEQ = b.BOARDSEQ
      ORDER BY GROUPSEQ DESC
    ) s
    )
    WHERE r BETWEEN #{param2} AND #{param3} 
	</select>
	
	


<!--******* 사진 게시물 페이징 처리*********  -->
   <select id="getBoardsPage" resultType="kr.co.skein.model.vo.MemberBoardCommand">
      SELECT * from
(SELECT ROWNUM r,  s.* FROM 
      (
      SELECT  m.EMAIL, m.FULLNAME, m.BIRTHDAY, m.PERSONALURI, b.BOARDSEQ, b.BOARDKINDSEQ, b.CONTENT, b.WRITEDATE, b.PUBLICLEVELCODE, b.ISACTIVATED, b.GROUPSEQ,
               h.STARTDATE, h.ENDDATE, h.FEELINGS, h.WEATHER, h.ISIMPORTANT, h.ISSHARE, h.KEYWORD, h.PLACE, bg.GROUPNAME, bg.ISIMPORTANTGROUP, bg.GROUPSTARTDATE, bg.GROUPENDDATE,
               me.FILENAME, me.FILESIZE, me.EXTENSION
               FROM
               MEMBERS m JOIN BOARD b
               ON m.EMAIL = b.email
               JOIN BOARDGROUP bg
               ON b.GROUPSEQ = bg.GROUPSEQ
               JOIN HISTORY h
               ON b.BOARDSEQ = h.BOARDSEQ
               LEFT OUTER JOIN MEDIA me
               ON b.BOARDSEQ = me.BOARDSEQ
               WHERE m.PERSONALURI =#{param1} ORDER BY  b.GROUPSEQ DESC, b.BOARDSEQ DESC
        ) s)
     WHERE r BETWEEN #{param2} AND #{param3}
   </select>
   
   
  <!--10. 사용자 게시물 상세 조회(공유하기 클릭시 화면)  -->
	<select id="getBoardShareDetailView" resultType="kr.co.skein.model.vo.BoardShareDetailView">
		select mb.fullName,b.boardSeq,b.boardkindseq,b.email,b.content,b.writedate,b.groupSeq,b.publicLevelcode,m.filename,m.boardSeq
		from board b  left outer JOIN  media m  ON  b.boardSeq = m.boardSeq  JOIN members mb ON b.email = mb.email where  b.groupseq = #{groupSeq}
	</select>
	
	<!--게시물 조회 boardSeq 기준  -->
	
	<select id="detailViewBoardSeq" resultType="kr.co.skein.model.vo.BoardDetailView">
		select mb.fullName,b.boardSeq,b.boardkindseq,b.email,b.content,b.writedate,b.groupSeq,b.publicLevelcode,m.filename,m.boardSeq
		from board b  JOIN  media m  ON  b.boardSeq = m.boardSeq  JOIN members mb ON b.email = mb.email where  b.BOARDSEQ = #{boardSeq}
	</select>
	
	
	<!-- 게시물 번호로 사용자 이메일 조회 -->
	<select id="getUserEmailByBoardSeq" resultType="String">
		SELECT Email FROM Board WHERE boardSeq = #{boardSeq}
	</select>
	
	
	
	
	
	
	<!-- 프로필 사용자 게시물 조회 -->
	<select id="getMemberBoards" resultType="kr.co.skein.model.vo.MemberBoardCommand">
		SELECT m.EMAIL, m.FULLNAME, m.BIRTHDAY, m.PERSONALURI, b.BOARDSEQ, b.BOARDKINDSEQ, b.CONTENT, b.WRITEDATE, b.PUBLICLEVELCODE, b.ISACTIVATED, b.GROUPSEQ,
			h.STARTDATE, h.ENDDATE, h.FEELINGS, h.WEATHER, h.ISIMPORTANT, h.ISSHARE, h.KEYWORD, h.PLACE, bg.GROUPNAME, bg.ISIMPORTANTGROUP, bg.GROUPSTARTDATE, bg.GROUPENDDATE,
			me.FILENAME, me.FILESIZE, me.EXTENSION
			FROM MEMBERS m JOIN BOARD b ON m.EMAIL = b.email
			JOIN BOARDGROUP bg ON b.GROUPSEQ = bg.GROUPSEQ
			JOIN HISTORY h ON b.BOARDSEQ = h.BOARDSEQ
			LEFT OUTER JOIN MEDIA me ON b.BOARDSEQ = me.BOARDSEQ
		
		<where>
			<if test="personalURI != null">
				m.PERSONALURI = #{personalURI}
			</if>
			<choose>
				<when test="isFriend != null">
					AND b.publicLevelCode IN (2, 3, 4, 5)
				</when>
				<otherwise>
					AND b.publicLevelCode IN (4, 5)
				</otherwise>
			</choose>
		</where>
		ORDER BY b.GROUPSEQ DESC, b.BOARDSEQ DESC 
	</select>
	
	
	
	<!-- 7. 사용자 그룹 게시물 조회 -->
	<select id="getMemberBoardGroup" resultType="kr.co.skein.model.vo.BoardGroup">
		SELECT * FROM
		(
		SELECT ROWNUM r, s.* from
		(
		SELECT bg.GroupSeq, bg.GroupName, bg.IsImportantGroup, bg.GroupStartDate, bg.GroupEndDate,
		            b.GroupCount, b.BoardSeq, b.Email, b.BOARDKINDSEQ, b.CONTENT, b.WRITEDATE, b.PUBLICLEVELCODE, b.ISACTIVATED,
		            h.STARTDATE, h.ENDDATE, h.FEELINGS, h.WEATHER, h.ISIMPORTANT, h.ISSHARE, h.KEYWORD, h.PLACE,
		            me.FILENAME, me.FILESIZE, me.EXTENSION,
		            m.FULLNAME, m.BIRTHDAY, m.PERSONALURI
		            FROM BOARDGROUP bg JOIN
		            (
		            SELECT BOARDSEQ, BoardKindSeq, Email, GroupSeq, Content, WRITEDATE, PUBLICLEVELCODE, ISACTIVATED, GroupCount FROM
		               (
		               SELECT BOARDSEQ, BoardKindSeq, Email, GroupSeq, Content, WRITEDATE, PUBLICLEVELCODE, ISACTIVATED, ROW_NUMBER() OVER(PARTITION BY groupSeq ORDER BY BOARDSEQ DESC) AS rnum, COUNT(*) OVER(PARTITION BY groupSeq) AS groupCount
		               FROM Board
		               
		               <where>
		               		<if test="email != null">
		               			 email = #{email}
		               		</if>
							<choose>
								<when test="isFriend != null">
									<choose>
										<when test="isFriend = true">
											AND publicLevelCode IN (2, 3, 4, 5)
										</when>
										<otherwise>
											AND publicLevelCode IN (4, 5)
										</otherwise>
									</choose>
								</when>
								<otherwise>
									AND publicLevelCode IN (5)
								</otherwise>
							</choose>
						</where>
		               )
		            WHERE rnum = 1
		            ) b ON bg.groupSeq = b.groupSeq
		      JOIN HISTORY h ON h.BOARDSEQ = b.BOARDSEQ
		      JOIN MEMBERS m ON m.Email = b.Email
		      LEFT OUTER JOIN MEDIA me ON me.BOARDSEQ = b.BOARDSEQ
		      ORDER BY GROUPSEQ DESC
		    ) s
		    )

		
		WHERE r BETWEEN #{startNum} AND #{endNum}
		ORDER BY GROUPSTARTDATE ASC
	</select>

	<!-- 알림페이지 게시물정보 -->
	<select id="getBoardsInfo" resultType="kr.co.skein.model.vo.BoardCommand">
		  SELECT * FROM board WHERE boardseq=${boardSeq}
	</select>
	
   <!--게시물 그룹 전체 삭제  -->  
   <delete id="boardGroupDelete">
		DELETE board WHERE GROUPSEQ = #{groupSeq}
   </delete>
   
   
    <delete id="boardDelete" >
   
   
   DELETE board WHERE BOARDSEQ = #{boardSeq}
   
   </delete>
   
   
   <!--게시물 수정  -->
   <update id="editBoard">
   
   UPDATE board SET  CONTENT = #{param1} WHERE BOARDSEQ = #{param2}
   </update>
</mapper>
