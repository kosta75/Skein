<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.skein.model.dao.MemberDao">
	
	<!-- 사용자 목록(기본정보) 조회 -->
	<select id="getMembers" resultType="kr.co.skein.model.vo.Member">
		SELECT * FROM Members
		<where>
			<if test="searchKey != null">
				<choose>
					<when test="searchKey.equals('customURI')">
						personalURI LIKE '${searchValue}%' 
					</when>
					<otherwise>
						${searchKey} = #{searchValue}
					</otherwise>
				</choose>
			</if>
			
		</where>
	</select>
	
	<!-- 사용자 등록(기본정보) -->
	<insert id="registerMember" parameterType="kr.co.skein.model.vo.Member">
		INSERT INTO Members(Email, LastName, FirstName, FullName, Password, Birthday, PersonalURI, IsApproved, IsLockedOut, IsDomranted, IsDropedOut, CreateDate, CertificationText)
		VALUES(#{email}, #{lastName}, #{firstName}, #{fullName}, #{password}, #{birthday}, #{personalURI}, #{isApproved}, #{isLockedOut}, #{isDomranted}, #{isDropedOut}, SYSDATE, #{certificationText})
	</insert>
	
	<!-- 사용자 정보 갱신(기본 계정정보) -->
	<update id="updateMemberAccount" parameterType="kr.co.skein.model.vo.Member">
		UPDATE Members
		<set>
			<if test="isLockedOut != null">IsLockedOut = #{isLockedOut},</if>
			<if test="isDropedOut != null">IsDropedOut = #{isDropedOut},</if>
			<if test="isDomranted != null">IsDomranted = #{isDomranted},</if>
			<if test="isApproved != null">IsApproved = #{isApproved},</if>			
			<if test="certificationText != null">CertificationText = #{certificationText}</if>
		</set>
		WHERE email = #{email}
	</update>
	
	<!-- 사용자 권한 등록(기본권한) -->
	<insert id="createMemberAuthority" parameterType="kr.co.skein.model.vo.Authority">
		INSERT INTO Authorities(Authority, Email)
		VALUES(#{authority}, #{email})
	</insert>
	
	<!-- 사용자 고유주소 조회 -->
	<select id="getPersonalURI" resultType="String">
		SELECT PersonalURI FROM Members WHERE Email = #{email}
	</select>
	
	<!-- 사용자 정보 조회 -->
	<select id="getMemberInfo" resultType="kr.co.skein.model.vo.Member">
		SELECT fullName, email, birthday FROM Members WHERE Email = #{email}
	</select>
	
	<!-- 사용자 테마 추가 -->
	<update id="updateColorTheme">
		UPDATE Members SET COLORTHEME=#{param1} WHERE email = #{param2}
	</update>
	
	<!-- 사용자 테마 조회 -->
	<select id="selectColorTheme" resultType="String">
		SELECT colorTheme FROM members WHERE email = #{email}
	</select>
	
	<!-- 사용자 상세 프로필 조회 -->
	<select id="getMemberProfiles" resultType="kr.co.skein.model.vo.ProfileCommand">
		SELECT pc.PROFILECODE, pc.PROFILENAME, p.PROFILEINFO, p.PUBLICLEVELCODE
		FROM MEMBERS m JOIN PROFILES p ON m.EMAIL = p.EMAIL JOIN PROFILECODES pc ON p.PROFILECODE = pc.PROFILECODE
		WHERE m.personalURI = #{personalURI}
	</select>
	
	<!-- 친구 검색 -->
	<!--  WHERE fullName LIKE '${searchValue}%' -->
	<select id="searchMembers" resultType="kr.co.skein.model.vo.SearchMemberCommand">
		SELECT fullName, personalURI, email,
			<if test="ignoreEmailValue != null">
				CASE
					WHEN email IN (SELECT FriendEmail FROM FRIENDSHIP WHERE email = #{ignoreEmailValue}) THEN 1
					ELSE 0
				END AS isFriend
			</if>
		FROM Members
		
		<where>
			<if test="searchNameValue != null">
				fullName LIKE '${searchNameValue}%'
			</if>
			<if test="ignoreEmailValue != null">
				AND email != #{ignoreEmailValue}
			</if>
		</where>		
	</select>
</mapper>